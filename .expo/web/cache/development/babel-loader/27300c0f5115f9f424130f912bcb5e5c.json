{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport estilos from \"./estilos\";\nimport { salvarRepositoriosDoUsuario } from \"../../services/requisicoes/repositorios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CriarRepositorio(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  function salvar() {\n    var resultado;\n    return _regeneratorRuntime.async(function salvar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(salvarRepositoriosDoUsuario(route.params.item.postId, nome, data));\n\n          case 2:\n            resultado = _context.sent;\n\n            if (resultado === 'sucesso') {\n              Alert.alert('Repositório criado!');\n              navigation.goBack();\n            } else {\n              Alert.alert(\"Erro ao criar repositório\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: estilos.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Nome do reposit\\xF3rio\",\n      autoCapitalize: \"none\",\n      style: estilos.entrada,\n      value: nome,\n      onChangeText: setNome\n    }), _jsx(TextInput, {\n      placeholder: \"Data de cria\\xE7\\xE3o\",\n      autoCapitalize: \"none\",\n      style: estilos.entrada,\n      valor: data,\n      onChangeText: setData,\n      keyboardType: \"decimal-pad\"\n    }), _jsx(TouchableOpacity, {\n      style: estilos.botao,\n      onPress: salvar,\n      children: _jsx(Text, {\n        style: estilos.textoBotao,\n        children: \"Criar\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","estilos","salvarRepositoriosDoUsuario","CriarRepositorio","route","navigation","nome","setNome","data","setData","salvar","params","item","postId","resultado","Alert","alert","goBack","container","entrada","botao","textoBotao"],"sources":["C:/Users/mateu/Desktop/wiser/Projetos Pessoais/react-native-ficando-online-projeto-base/src/paginas/CriarRepositorio/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Alert } from 'react-native';\nimport estilos from './estilos';\nimport { salvarRepositoriosDoUsuario } from '../../services/requisicoes/repositorios';\n\nexport default function CriarRepositorio({ route, navigation }) {\n    const [nome, setNome] = useState('');\n    const [data, setData] = useState('');\n\n    async function salvar() {\n        const resultado = await salvarRepositoriosDoUsuario(\n            route.params.item.postId,\n            nome,\n            data,\n        )\n\n        if (resultado === 'sucesso') {\n            Alert.alert('Repositório criado!');\n            navigation.goBack();\n        } else {\n            Alert.alert(\"Erro ao criar repositório\");\n        }\n    }\n\n    return (\n        <View style={estilos.container}>\n            <TextInput\n                placeholder=\"Nome do repositório\"\n                autoCapitalize=\"none\"\n                style={estilos.entrada}\n                value={nome}\n                onChangeText={setNome}\n            />\n            <TextInput\n                placeholder=\"Data de criação\"\n                autoCapitalize=\"none\"\n                style={estilos.entrada}\n                valor={data}\n                onChangeText={setData}\n                keyboardType='decimal-pad'\n            />\n            <TouchableOpacity\n                style={estilos.botao}\n                onPress={salvar}\n            >\n                <Text style={estilos.textoBotao}>\n                    Criar\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,OAAP;AACA,SAASC,2BAAT;;;AAEA,eAAe,SAASC,gBAAT,OAAiD;EAAA,IAArBC,KAAqB,QAArBA,KAAqB;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC5D,gBAAwBL,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAwBP,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOQ,IAAP;EAAA,IAAaC,OAAb;;EAEA,SAAeC,MAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAC4BR,2BAA2B,CAC/CE,KAAK,CAACO,MAAN,CAAaC,IAAb,CAAkBC,MAD6B,EAE/CP,IAF+C,EAG/CE,IAH+C,CADvD;;UAAA;YACUM,SADV;;YAOI,IAAIA,SAAS,KAAK,SAAlB,EAA6B;cACzBC,KAAK,CAACC,KAAN,CAAY,qBAAZ;cACAX,UAAU,CAACY,MAAX;YACH,CAHD,MAGO;cACHF,KAAK,CAACC,KAAN,CAAY,2BAAZ;YACH;;UAZL;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAeA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEf,OAAO,CAACiB,SAArB;IAAA,WACI,KAAC,SAAD;MACI,WAAW,EAAC,wBADhB;MAEI,cAAc,EAAC,MAFnB;MAGI,KAAK,EAAEjB,OAAO,CAACkB,OAHnB;MAII,KAAK,EAAEb,IAJX;MAKI,YAAY,EAAEC;IALlB,EADJ,EAQI,KAAC,SAAD;MACI,WAAW,EAAC,uBADhB;MAEI,cAAc,EAAC,MAFnB;MAGI,KAAK,EAAEN,OAAO,CAACkB,OAHnB;MAII,KAAK,EAAEX,IAJX;MAKI,YAAY,EAAEC,OALlB;MAMI,YAAY,EAAC;IANjB,EARJ,EAgBI,KAAC,gBAAD;MACI,KAAK,EAAER,OAAO,CAACmB,KADnB;MAEI,OAAO,EAAEV,MAFb;MAAA,UAII,KAAC,IAAD;QAAM,KAAK,EAAET,OAAO,CAACoB,UAArB;QAAA;MAAA;IAJJ,EAhBJ;EAAA,EADJ;AA2BH"},"metadata":{},"sourceType":"module"}