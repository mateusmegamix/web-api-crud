{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from \"../api\";\nexport function pegarRepositoriosDoUsuario(id) {\n  var resultado;\n  return _regeneratorRuntime.async(function pegarRepositoriosDoUsuario$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(api.get(\"/repos?postId=\" + id));\n\n        case 3:\n          resultado = _context.sent;\n          return _context.abrupt(\"return\", resultado.data);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", []);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function atualizarRepositoriosDoUsuario(postId, nome, data, id) {\n  var parametros;\n  return _regeneratorRuntime.async(function atualizarRepositoriosDoUsuario$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          parametros = {\n            name: nome,\n            data: data,\n            postId: postId,\n            id: id\n          };\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(api.put(\"/repos/\" + id, parametros));\n\n        case 4:\n          return _context2.abrupt(\"return\", 'sucesso');\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", 'erro');\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function salvarRepositoriosDoUsuario(postId, nome, data, id) {\n  var parametros;\n  return _regeneratorRuntime.async(function salvarRepositoriosDoUsuario$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          parametros = {\n            name: nome,\n            data: data,\n            postId: postId,\n            id: id\n          };\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(api.put(\"/repos/\" + id, parametros));\n\n        case 4:\n          return _context3.abrupt(\"return\", 'sucesso');\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", 'erro');\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}","map":{"version":3,"names":["api","pegarRepositoriosDoUsuario","id","get","resultado","data","console","log","atualizarRepositoriosDoUsuario","postId","nome","parametros","name","put","salvarRepositoriosDoUsuario"],"sources":["C:/Users/mateu/Desktop/wiser/Projetos Pessoais/react-native-ficando-online-projeto-base/src/services/requisicoes/repositorios.js"],"sourcesContent":["import api from '../api';\r\n\r\nexport async function pegarRepositoriosDoUsuario(id) {\r\n    try {\r\n        const resultado = await api.get(`/repos?postId=${id}`)\r\n        return resultado.data\r\n    } catch (error) {\r\n        console.log(error)\r\n        return []\r\n    }\r\n}\r\n\r\nexport async function atualizarRepositoriosDoUsuario(postId, nome, data, id) {\r\n    try {\r\n\r\n        const parametros = {\r\n            name: nome,\r\n            data: data,\r\n            postId: postId,\r\n            id: id\r\n        }\r\n\r\n        await api.put(`/repos/${id}`, parametros );\r\n\r\n        return 'sucesso'\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        return 'erro'\r\n    }\r\n}\r\n\r\nexport async function salvarRepositoriosDoUsuario(postId, nome, data, id) {\r\n    try {\r\n\r\n        const parametros = {\r\n            name: nome,\r\n            data: data,\r\n            postId: postId,\r\n            id: id\r\n        }\r\n\r\n        await api.put(`/repos/${id}`, parametros );\r\n\r\n        return 'sucesso'\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        return 'erro'\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,GAAP;AAEA,OAAO,SAAeC,0BAAf,CAA0CC,EAA1C;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAEyBF,GAAG,CAACG,GAAJ,oBAAyBD,EAAzB,CAFzB;;QAAA;UAEOE,SAFP;UAAA,iCAGQA,SAAS,CAACC,IAHlB;;QAAA;UAAA;UAAA;UAKCC,OAAO,CAACC,GAAR;UALD,iCAMQ,EANR;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAUP,OAAO,SAAeC,8BAAf,CAA8CC,MAA9C,EAAsDC,IAAtD,EAA4DL,IAA5D,EAAkEH,EAAlE;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAGOS,UAHP,GAGoB;YACfC,IAAI,EAAEF,IADS;YAEfL,IAAI,EAAEA,IAFS;YAGfI,MAAM,EAAEA,MAHO;YAIfP,EAAE,EAAEA;UAJW,CAHpB;UAAA;UAAA,iCAUOF,GAAG,CAACa,GAAJ,aAAkBX,EAAlB,EAAwBS,UAAxB,CAVP;;QAAA;UAAA,kCAYQ,SAZR;;QAAA;UAAA;UAAA;UAeCL,OAAO,CAACC,GAAR;UAfD,kCAgBQ,MAhBR;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAoBP,OAAO,SAAeO,2BAAf,CAA2CL,MAA3C,EAAmDC,IAAnD,EAAyDL,IAAzD,EAA+DH,EAA/D;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAGOS,UAHP,GAGoB;YACfC,IAAI,EAAEF,IADS;YAEfL,IAAI,EAAEA,IAFS;YAGfI,MAAM,EAAEA,MAHO;YAIfP,EAAE,EAAEA;UAJW,CAHpB;UAAA;UAAA,iCAUOF,GAAG,CAACa,GAAJ,aAAkBX,EAAlB,EAAwBS,UAAxB,CAVP;;QAAA;UAAA,kCAYQ,SAZR;;QAAA;UAAA;UAAA;UAeCL,OAAO,CAACC,GAAR;UAfD,kCAgBQ,MAhBR;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}